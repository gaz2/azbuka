import { Plugin } from 'vite';
import { M as ModuleInfo, C as CDNPluginOptions, E as ExternalPluginOptions } from './interface-e79e5043.js';
export { I as InjectVisitor, T as TrackModule } from './interface-e79e5043.js';
import '@rollup/pluginutils';

declare class CodeGen {
    dependencies: Map<string, ModuleInfo>;
    aliasesToDependencies: Map<string, string>;
    injectDependencies(dependencies: Map<string, ModuleInfo>): void;
    filter(code: string, id: string): boolean;
    private scanImportDeclarationAndRecord;
    private overWriteExportNamedDeclaration;
    private overWriteExportAllDeclaration;
    private eraseDuplicatedVariableDeclaration;
    transform(code: string): Promise<{
        code: string;
        map: {
            version: number;
            sources: string[];
            names: string[];
            sourceRoot?: string;
            sourcesContent?: string[];
            mappings: string;
            file: string;
        };
    }>;
}

interface ExternalPluginAPI {
    filter: (id: unknown) => boolean;
    generator: CodeGen;
}
declare function cdn(opts?: CDNPluginOptions): Plugin[];
declare function external(opts?: ExternalPluginOptions): Plugin;
declare namespace external {
    var getExternalPluginAPI: (plugins: Plugin[]) => ExternalPluginAPI;
}

export { CDNPluginOptions, ExternalPluginOptions, cdn, cdn as default, external };
